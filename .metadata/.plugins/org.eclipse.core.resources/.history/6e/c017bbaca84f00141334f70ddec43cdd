package OmniBOT;

import java.rmi.RemoteException;

import lejos.hardware.Sound;
import lejos.hardware.lcd.TextLCD;
import lejos.remote.ev3.RMIRegulatedMotor;
import lejos.remote.ev3.RemoteEV3;

public class MotorControl {
	RMIRegulatedMotor a;
	RMIRegulatedMotor b;
	RMIRegulatedMotor c;
	RemoteEV3 ev3;
	public MotorControl(String ip) {
		
		try {
			ev3 = new RemoteEV3("10.0.1.1");
		} catch (Exception e1) { // TODO Auto-generated catch block
			e1.printStackTrace();
		}
		Sound.beep();
		Sound.beep();
		TextLCD lcd = ev3.getTextLCD();
		ev3.setDefault();
		lcd.clear();
		lcd.drawString("Connected", 0, 1);
		a = ev3.createRegulatedMotor("A", 'N');
		b = ev3.createRegulatedMotor("B", 'N');
		c = ev3.createRegulatedMotor("C", 'N');
	}

	public static void setMotorSpeeds(RMIRegulatedMotor a, RMIRegulatedMotor b,
			RMIRegulatedMotor c, double[] motorSpeeds) throws RemoteException {
		int aSpeed = (int) Math.round(motorSpeeds[0]);
		int bSpeed = (int) Math.round(motorSpeeds[1]);
		int cSpeed = (int) Math.round(motorSpeeds[2]);

		a.setSpeed(aSpeed);
		b.setSpeed(bSpeed);
		c.setSpeed(cSpeed);

		if (aSpeed >= 0)
			a.forward();
		else
			a.backward();
		if (bSpeed >= 0)
			b.forward();
		else
			b.backward();
		if (cSpeed >= 0)
			c.forward();
		else
			c.backward();
	}

	public static double[] transformCartSpeedstoMotorSpeeds(
			double[] cartSpeeds, double[][] transformation) {
		double[] motorSpeeds = new double[3];
		for (int i = 0; i < 3; i++) {
			motorSpeeds[i] = 0;
		}
		for (int i = 0; i < 3; i++) {
			motorSpeeds[0] += transformation[0][i] * cartSpeeds[i];
			motorSpeeds[1] += transformation[1][i] * cartSpeeds[i];
			motorSpeeds[2] += transformation[2][i] * cartSpeeds[i];
		}
		for (int i = 0; i < 3; i++) {
			motorSpeeds[i] = (double) Math.toDegrees(motorSpeeds[i]);
		}
		return motorSpeeds;
	}
}